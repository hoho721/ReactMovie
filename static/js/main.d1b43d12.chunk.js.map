{"version":3,"sources":["Components/Movie.js","App.js","index.js"],"names":["MoviePoster","_ref2","poster","alt","react_default","a","createElement","src","title","className","MovieGenre","_ref3","genre","Movie","_ref","genres","synopsis","map","index","key","lib_default","text","maxLine","ellipsis","trimRight","basedOn","App","state","_renderMovies","_this","movies","movie","Components_Movie","medium_cover_image","id","_fetchMovies","_callee","url","regenerator_default","wrap","_context","prev","next","_callApi","sent","console","log","setState","t0","stop","fetch","then","response","json","myJson","data","catch","err","this","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"wUAgCA,SAASA,EAATC,GAAqC,IAAdC,EAAcD,EAAdC,OAAQC,EAAMF,EAANE,IAC3B,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,IAAKL,EAAQC,IAAKA,EAAKK,MAAOL,EAAKM,UAAU,kBAG7D,SAASC,EAATC,GAA6B,IAARC,EAAQD,EAARC,MACjB,OAAOR,EAAAC,EAAAC,cAAA,QAAMG,UAAU,gBAAgBG,GAmB5BC,MAlDf,SAAAC,GAAkD,IAAlCN,EAAkCM,EAAlCN,MAAON,EAA2BY,EAA3BZ,OAAQa,EAAmBD,EAAnBC,OAAQC,EAAWF,EAAXE,SACnC,OACIZ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACXL,EAAAC,EAAAC,cAACN,EAAD,CAAaE,OAAQA,EAAQC,IAAKK,KAEtCJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACXL,EAAAC,EAAAC,cAAA,UAAKE,GACLJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACVM,EAAOE,IAAI,SAACL,EAAOM,GAAR,OAAkBd,EAAAC,EAAAC,cAACI,EAAD,CAAYE,MAAOA,EAAOO,IAAKD,OAEjEd,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBACXL,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CACIgB,KAAML,EACNM,QAAQ,IACRC,SAAS,MACTC,WAAS,EACTC,QAAQ,gBCmCjBC,6MApDXC,MAAQ,KAMRC,cAAgB,WACZ,OAAOC,EAAKF,MAAMG,OAAOb,IAAI,SAAAc,GAAK,OAC9B3B,EAAAC,EAAAC,cAAC0B,EAAD,CACIxB,MAAOuB,EAAMvB,MACbN,OAAQ6B,EAAME,mBACdlB,OAAQgB,EAAMhB,OACdC,SAAUe,EAAMf,SAChBG,IAAKY,EAAMG,UAIvBC,mDAAe,SAAAC,EAAOC,GAAP,IAAAP,EAAA,OAAAQ,EAAAjC,EAAAkC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEYb,EAAKc,SAASN,GAF1B,OAEHP,EAFGU,EAAAI,KAGPC,QAAQC,IAAIhB,GACZD,EAAKkB,SAAS,CACVjB,WALGU,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SASPK,QAAQC,IAARN,EAAAQ,IATO,yBAAAR,EAAAS,SAAAb,EAAA,yEAafO,SAAW,SAACN,GACR,OAAOa,MAAMb,GACRc,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAM,OAAIA,EAAOC,KAAKzB,SAC3B0B,MAAM,SAAAC,GACHZ,QAAQC,IAAIW,yFAhCpBC,KAAKvB,aAAa,kGAqCb,IACEL,EAAU4B,KAAK/B,MAAfG,OACP,OACI1B,EAAAC,EAAAC,cAAA,OAAKG,UAAWqB,EAAS,MAAQ,gBAEzBA,EAAS4B,KAAK9B,gBAAkB,kBA/ClC+B,aCClBC,IAASC,OAAOzD,EAAAC,EAAAC,cAACwD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.d1b43d12.chunk.js","sourcesContent":["import React from 'react'\nimport './Movie.css';\nimport PropTypes from 'prop-types';\nimport LinesEllipsis from 'react-lines-ellipsis'\n\n\nfunction Movie({title, poster, genres, synopsis}) {\n    return (\n        <div className=\"Movie\">\n            <div className=\"Movie__Column\">\n                <MoviePoster poster={poster} alt={title} />\n            </div>\n            <div className=\"Movie__Column\">\n                <h1>{title}</h1>\n                <div className=\"Movie__Genres\">\n                    {genres.map((genre, index) => <MovieGenre genre={genre} key={index}/>)}\n                </div>\n                <div className=\"Movie__Synopsis\">\n                    <LinesEllipsis\n                        text={synopsis}\n                        maxLine='3'\n                        ellipsis='...'\n                        trimRight\n                        basedOn='letters'\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nfunction MoviePoster ({poster, alt}) {\n    return <img src={poster} alt={alt} title={alt} className=\"Movie__Poster\"/>\n}\n\nfunction MovieGenre({genre}) {\n    return <span className=\"Movie__Genre\">{genre}</span>\n}\n\nMoviePoster.propTypes = {\n    poster: PropTypes.string.isRequired,\n    alt: PropTypes.string\n};\n\nMovie.propTypes = {\n    title: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.array.isRequired,\n    synopsis: PropTypes.string.isRequired\n};\n\nMovieGenre.propTypes = {\n    genre: PropTypes.string.isRequired\n};\n\nexport default Movie;\n","import React, {Component} from 'react';\nimport './App.css';\nimport Movie from './Components/Movie';\n\nclass App extends Component {\n\n    state = {};\n\n    componentDidMount() {\n        this._fetchMovies('https://yts.am/api/v2/list_movies.json?sort_by=download_count')\n    }\n\n    _renderMovies = () => {\n        return this.state.movies.map(movie =>\n            <Movie\n                title={movie.title}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n                synopsis={movie.synopsis}\n                key={movie.id}/>);\n    };\n\n\n    _fetchMovies = async (url) => {\n        try {\n            let movies = await this._callApi(url);\n            console.log(movies);\n            this.setState({\n                movies\n            })\n\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    _callApi = (url) => {\n        return fetch(url)\n            .then(response => response.json())\n            .then(myJson => myJson.data.movies)\n            .catch(err => {\n                console.log(err)\n            });\n    };\n\n\n    render() {\n        const {movies} = this.state;\n        return (\n            <div className={movies ? \"App\" : \"App--loading\"}>\n                {\n                    movies ? this._renderMovies() : \"Loading\"\n                }\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}